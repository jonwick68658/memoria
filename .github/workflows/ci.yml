name: CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    services:
      postgres:
        image: ankane/pgvector:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: memoria
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Wait for Postgres
        env:
          PGPASSWORD: postgres
        run: |
          for i in {1..60}; do
            if psql -h localhost -U postgres -d memoria -c "SELECT 1" >/dev/null 2>&1; then
              echo "Postgres is ready"
              break
            fi
            echo "Waiting for Postgres..."
            sleep 1
          done

      - name: Apply DB migrations
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/memoria
        run: |
          python scripts/apply_migrations.py

      - name: Import smoke test
        env:
          PYTHONPATH: ./src
        run: |
          python - << 'PY'
          import importlib
          import sys
          mod = importlib.import_module("memoria")
          print("Import OK:", mod.__name__)
          PY

      - name: Static checks
        run: |
          ruff check .
          black --check .
          isort --check-only .
          mypy src || true
    
      - name: Run tests with coverage
        env:
          PYTHONPATH: ./src
        run: |
          pytest --cov=src/memoria --cov-report=xml --cov-report=term-missing tests/
    
      - name: Build Docker image
        run: |
          docker build -t memoria .
    
      - name: Security scans
        run: |
          bandit -r src/ -f json -o bandit-report.json || true
          safety check -r requirements.txt --full-report || true
    
      - name: Run focused tests (security, standalone)
        env:
          PYTHONPATH: ./src
        run: |
          pytest -q tests/test_security_system_standalone.py